
import socket
from cryptography import fernet 
from cryptography.fernet import Fernet
from time import ctime

HEADER = 64
PORT = 5050
FORMAT = 'utf-8'
SIZE = 1024

CLIENT = socket.gethostbyname(socket.gethostname())
ADDR = (CLIENT, PORT)


client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client.connect(ADDR)

def client_chat():
    print()
    print("[CONNECTION ESTABLISHED] Server is now chatting.")
    while 1:
        message=input(str(f'{[ctime()]} You:> '))
        message=message.encode(FORMAT)
        client.send(message)
        incoming_message=client.recv(SIZE)
        incoming_message=incoming_message.decode(FORMAT)
        print(f'{[ctime()]} Server:>',incoming_message)
        if(incoming_message=="bye"):
            break
    client.close()

response = client.recv(SIZE)
name=input(response.decode(FORMAT))
client.send(name.encode(FORMAT))
response = client.recv(SIZE)
password=input(response.decode(FORMAT))
client.send(password.encode(FORMAT))

response = client.recv(SIZE)
auth_client = response.decode(FORMAT)

if(auth_client == "Authorized"):
    
    filename = 'encrypted.txt'
    file = open(filename, 'wb')
    file_data = client.recv(SIZE)
    print(f"[DATA RECEIVED] File received")
    file.write(file_data)
    file.close()

    filename1 = 'key.key'
    file1 = open(filename1, 'wb')
    try:
        key_data = client.recv(SIZE)
        print(f"[DATA RECEIVED] Key received")
        file1.write(key_data)
        file1.close()
    except:
        print("[ERROR] Key not received")
        

    file1 = open('key.key', 'rb')
    key = file1.read()
    file1.close()

    with open('encrypted.txt', 'rb') as f:
        data = f.read()

    fernet = Fernet(key)
    decrypted = fernet.decrypt(data)

    with open('decrypted.txt', 'wb') as f:
        f.write(decrypted)

    client_chat()

else:
    print()
    print(auth_client)
    client_chat()

